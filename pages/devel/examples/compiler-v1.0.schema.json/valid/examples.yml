version: "1.0"
buildspecs:
  gnu_example:
    executor: local.bash
    type: compiler
    description: "gnu example with modules, and cflags example"
    source: src/hello.c
    compilers:
      name: [gcc]
      config:
        gcc@8.4.0:
          cflags: "-O3"


  intel_example:
    executor: local.bash
    type: compiler
    description: "intel example using cflags"
    source: src/hello.c
    compilers:
      name: [intel]
      config:
        intel@2018:
          cflags: "-O1"

  pgi_example:
    executor: local.bash
    type: compiler
    description: "pgi example using cxxflags, ldflags key"
    source: src/hello.cpp
    compilers:
      name: ["^(pgi|PrgEnv)"]
      default:
        pgi:
          cxxflags: "-O1"
          ldflags: "-lm"
      config:
        pgi@18.1:
          module:
            swap: [PrgEnv-gnu, PrgEnv-pgi]
            load: [pgi/18.1]
        pgi@18.2:
          module:
            swap: [PrgEnv-gnu, PrgEnv-pgi]
            load: [pgi/18.2]

  cray_example:
    executor: local.bash
    type: compiler
    description: "cray example using fflags and cppflags"
    source: src/hello.f90
    compilers:
      name: ["PrgEnv-cray"]
      default:
        cray:
          fflags: "-O1"
      config:
        PrgEnv-cray@2.6.2:
          module:
            swap: [PrgEnv-intel, PrgEnv-cray/2.6.2]

  sbatch_example_all_compiler_groups:
    type: compiler
    description: sbatch example to for all compiler groups
    executor: local.bash
    source: src/hello.f90
    compilers:
      name: ["PrgEnv-cray"]
      default:
        cray:
          fflags: "-O1"
        all:
          sbatch: ["-t 10", "-n 2", "-C haswell" ]
      config:
        PrgEnv-cray@2.6.2:
          module:
            swap: [PrgEnv-intel, PrgEnv-cray/2.6.2]

  bsub_all_compiler_groups:
    type: compiler
    description: bsub example for all compiler groups
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: [intel]
      default:
        all:
          bsub: ["-W 00:30", "-n 2"]
      config:
        intel@2019:
          cxxflags: "-O1"

  cobalt_all_compiler_groups:
    type: compiler
    description: cobalt example for all compiler groups
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: [intel]
      default:
        all:
          cobalt: ["-t 30", "-n 1"]
      config:
        intel@2019:
          cxxflags: "-O1"

  sbatch_compiler_group:
    type: compiler
    description: sbatch example in multiple compiler groups.
    executor: local.bash
    source: src/hello.f90
    compilers:
      name: ["^(gcc|intel)"]
      default:
        gcc:
          fflags: "-O1"
          sbatch: ["-t 10", "-n 2", "-C haswell" ]
        intel:
          fflags: "-O2"
          sbatch: ["-t 10", "-n 2", "-C knl" ]
      config:
        gcc@8.1.0:
          sbatch: ["-t 60", "-n 2", "-C knl"]
          module:
            swap: [PrgEnv-intel, PrgEnv-gnu/6.1.0]


  bsub_compiler_group:
    type: compiler
    description: bsub example in multiple compiler groups.
    executor: local.bash
    source: src/hello.f90
    compilers:
      name: ["^(gcc|intel)"]
      default:
        gcc:
          fflags: "-O1"
          bsub: ["-W 00:30", "-n 2" ]
        intel:
          fflags: "-O2"
          bsub: ["-W 00:30", "-n 4" ]
      config:
        gcc@8.1.0:
           bsub: ["-W 00:30", "-n 6" ]
           module:
             swap: [PrgEnv-intel, PrgEnv-gnu/6.1.0]

  batch_example:
    type: compiler
    description: example using batch field
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: [intel]
      default:
        all:
          batch:
            "timelimit": "30"
            "nodecount": "2"
            "queue": "batch"
            "account": "biology"
      config:
        intel@2019:
          cxxflags: "-O1"

  env_example:
    type: compiler
    description: Setting environment variables
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: ["^(gcc)"]
      default:
        all:
          env:
            OMP_NUM_THREADS: 2
          run: $_EXEC 1 2 4
      config:
        gcc@10.2.0:
          cxxflags: "-fopenmp"

  custom_env_by_compiler_group:
    type: compiler
    description: Setting environment variables in compiler groups
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: ["^(gcc|pgi)"]
      default:
        all:
          run: $_EXEC 1 2 4
        gcc:
          cxxflags: "-fopenmp"
          env:
            OMP_NUM_THREADS: 4
        pgi:
          cxxflags: "-mp"
          env:
            OMP_NUM_THREADS: 6
      config:
        gcc@10.2.0:
          env:
            OMP_NUM_THREADS: 6

        gcc@9.2.0:
          env:
            OMP_NUM_THREADS: 8

        pgi@9.2.0:
          env:
            OMP_NUM_THREADS: 10

  vars_example:
    type: compiler
    description: Setting shell variables
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: ["^(gcc)"]
      default:
        all:
          vars:
            OUTFILE: /tmp/file1.txt
          run: $_EXEC > $OUTFILE
      config:
        gcc@10.2.0:
          cxxflags: "-fopenmp"

  pass_args_run:
    type: compiler
    description: Passing arguments to executable in run section
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: [intel]
      default:
        all:
          run: $_EXEC 1 2 4
      config:
        intel@2019:
          cxxflags: "-O1"

  mpi_launcher_example:
    type: compiler
    description: mpi launcher example
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: [gcc]
      default:
        all:
          run: mpirun -np 2 $_EXEC
      config:
        gcc@7.3.0:
          cflags: "-O3"
          cxx: mpicxx

  status_returncode_example:
    type: compiler
    description: Status returncode match example
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: [gnu]
      default:
        all:
          vars:
            OUTFILE: /tmp/file1.txt
          run: $_EXEC > $OUTFILE
          status:
            returncode: 1
      config:
        gcc@10.2.0:
          cxxflags: "-fopenmp"

  pre_post_build_run_sections:
    type: compiler
    description: Run commands pre and post build section
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: ["^(gcc)"]
      default:
        all:
          pre_build: echo "pre-build section for ALL compilers"
          post_build: echo "post-build section for ALL Compilers"
          pre_run: echo "pre-run section for ALL compilers"
          post_run: echo "post-run section for ALL Compilers"
        gcc:
          pre_build: echo "pre-build section for GCC compilers"
          post_build: echo "post-build section for GCC compilers"
          pre_run: echo "pre-run section for ALL compilers"
          post_run: echo "post-run section for ALL Compilers"
      config:
        gcc@7.3.0:
          pre_build: echo "pre-build section for gcc@7.3.0"
          post_build: echo "post-build section for gcc@7.3.0"
          pre_run: echo "pre-run section for ALL compilers"
          post_run: echo "post-run section for ALL Compilers"
          cflags: "-O3"
        gcc@8.2.0:
          pre_build: echo "gcc --version"
          cflags: "-O3"


  multi_compilers:
    type: compiler
    description: Select one or more compilers to run test
    executor: local.bash
    source: "src/hello.cpp"
    compilers:
      name: ["^(gcc|intel|pgi|cray)"]
      exclude: [intel@18]
      default:
        gcc:
          cflags: "-fopenmp"
        intel:
          cflags: "-qopenmp"
        pgi:
          cflags: "-fopenmp"
        cray:
          cflags: "-h omp"
      config:
        gcc@7.5.0:
          cflags: "-O3"
          module:
            load: [gcc/7.5.0]
        intel@17:
          module:
            load: [intel/2017]
        intel@18:
          module:
            load: [intel/2018]
        pgi/18.0:
          module:
            load: [pgi/18.0]
        craype/2.6.2:
          module:
            swap: [PrgEnv-intel, PrgEnv-cray]
            load: [craype/2.6.2]
